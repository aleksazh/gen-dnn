-------------------------------------------
For failing build/examples/cpu-tutorials-matmul-matmul-quantization-cpp
check that the u8 matmul descriptor has properly set oscale, such as:

11: dnnl_verbose,create,cpu,matmul,matmul-gemm:ref,undef,src_u8::blocked:ab:f0 wei_s8::blocked:ab:f0 dst_f32::blocked:ab:f0,oscale:0:-nan;,,m10n20k30,0.0620117
11: dnnl_verbose,exec,cpu,matmul,matmul-gemm:ref,undef,src_u8::blocked:ab:f0 wei_s8::blocked:ab:f0 dst_f32::blocked:ab:f0,oscale:0:-nan;,,m10n20k30,0.48999
-------------------------------------------
Simple_blocked_3d_padded_f32/eltwise_test_f32.TestsEltwise/8
dnnl_verbose,exec,cpu,eltwise,ref:any,forward_training,data_f32:p:blocked:aBcde16b:f0 diff_undef::undef::f0,,alg:eltwise_sqrt alpha:0.1 beta:0.2,4x27x2x2x2
was skipped in success run, and gets 'nan' in failed run
and all remaining eltwise_sqrt have "error evaluates to -nan"
(16 failed tests)
-------------------------------------------
Good: ve2.log
35: [ RUN      ] TestPooling_nChw16c_padded/pooling_bwd_test_float.TestsPoolingBackward/1
35: dnnl_verbose,create,cpu,pooling,ref:any,forward_training,src_f32:p:blocked:aBcd16b:f0 dst_f32:p:blocked:aBcd16b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb4ic23_ih60oh31kh3sh2ph1_iw60ow31kw4sw2pw1,0.0400391
Bad: vee.log
35: [ RUN      ] TestPooling_nChw16c_padded/pooling_bwd_test_float.TestsPoolingBackward/1
35: dnnl_verbose,create,cpu,pooling,ref:any,forward_training,src_f32:p:blocked:aBcd16b:f0 dst_f32:p:blocked:aBcd16b:f0 ws_undef::undef::f0,,alg:pooling_avg_exclude_padding,mb4ic23_ih60oh31kh3sh2ph1_iw60ow31kw4sw2pw1,0.0610352
35: test_pooling_backward: /usr/uhome/aurora/4gi/nlabhpg/work/kruus/v11/src/cpu/ref_pooling.cpp:60: void dnnl::impl::cpu::ref_pooling_fwd_t<data_type, acc_type>::execute_forward(const dnnl::impl::exec_ctx_t &) const [with data_type = (dnnl_data_type_t)3, acc_type = (dnnl_data_type_t)3]: Assertion `ws_dt == data_type::u8 || ws_dt == data_type::s32' failed.
-------------------------------------------
ve2.log
34: [ RUN      ] TestPooling3D_ndhwc_CPU/pooling_test_float.TestsPooling/3
34: dnnl_verbose,create,cpu,pooling,simple_nhwc:any,forward_inference,src_f32::blocked:acdeb:f0 dst_f32::blocked:acdeb:f0 ws_undef::undef::f0,,alg:pooling_max,mb2ic32_id60od31kd4sd2pd1_ih60oh31kh2sh2ph1_iw60ow31kw3sw2pw1,0.045166
34: dnnl_verbose,exec,cpu,pooling,simple_nhwc:any,forward_inference,src_f32::blocked:acdeb:f0 dst_f32::blocked:acdeb:f0 ws_undef::undef::f0,,alg:pooling_max,mb2ic32_id60od31kd4sd2pd1_ih60oh31kh2sh2ph1_iw60ow31kw3sw2pw1,302.273
34: /usr/uhome/aurora/4gi/nlabhpg/work/kruus/v11/tests/gtests/test_pooling_forward.cpp:148: Failure
34: The difference between out and out_ref is 1, which exceeds 1e-6, where
34: out evaluates to 0,
34: out_ref evaluates to -1, and
34: 1e-6 evaluates to 9.9999999999999995e-07.
34: [  FAILED  ] TestPooling3D_ndhwc_CPU/pooling_test_float.TestsPooling/3, where GetParam() = 168-byte object <60-00 00-00 FF-01 00-00 0D-00 00-00 0D-00 00-00 05-00 00-00 00-00 00-00 02-00 00-00 00-00 00-00 20-00 00-00 00-00 00-00 3C-00 00-00 00-00 00-00 3C-00 00-00 00-00 00-00 3C-00 00-00 00-00 00-00 ... 03-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 02-00 00-00 00-00 00-00 02-00 00-00 00-00 00-00 02-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00> (3258 ms)
...
34: [ RUN      ] TestPooling3Dunet_ndhwc_CPU/pooling_test_float.TestsPooling/0
34: dnnl_verbose,create,cpu,pooling,simple_nhwc:any,forward_inference,src_f32::blocked:acdeb:f0 dst_f32::blocked:acdeb:f0 ws_undef::undef::f0,,alg:pooling_max,mb1ic64_id64od64kd2sd1pd0_ih64oh64kh2sh1ph0_iw64ow64kw2sw1pw0,0.0429688
34: dnnl_verbose,exec,cpu,pooling,simple_nhwc:any,forward_inference,src_f32::blocked:acdeb:f0 dst_f32::blocked:acdeb:f0 ws_undef::undef::f0,,alg:pooling_max,mb1ic64_id64od64kd2sd1pd0_ih64oh64kh2sh1ph0_iw64ow64kw2sw1pw0,492.159
34: /usr/uhome/aurora/4gi/nlabhpg/work/kruus/v11/tests/gtests/test_pooling_forward.cpp:148: Failure
34: The difference between out and out_ref is 0.80164420604705811, which exceeds 1e-6, where
34: out evaluates to 0,
34: out_ref evaluates to -0.80164420604705811, and
34: 1e-6 evaluates to 9.9999999999999995e-07.
34: [  FAILED  ] TestPooling3Dunet_ndhwc_CPU/pooling_test_float.TestsPooling/0, where GetParam() = 168-byte object <60-00 00-00 FF-01 00-00 0D-00 00-00 0D-00 00-00 05-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 40-00 00-00 00-00 00-00 40-00 00-00 00-00 00-00 40-00 00-00 00-00 00-00 40-00 00-00 00-00 00-00 ... 02-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 01-00 00-00 00-00 00-00 00-00 00-00 00-00 00-00> (10124 ms)
-------------------------------------------
The following files have loops over dimensions.  dnnl supports up to 12 dimensions.
Many of these files compile for TARGET_VE, where ncc/nc++ can use the ShortLoop()
macro to inform that loop vectorization could occur within a single vector register.
(i.e. we guarantee loop limit less than ISA register length of 256)
-- perhaps 16*4=64  64*8=512  avx512 can also have this, but the for-loop prefix
   should be named ShortLoop16() and ShortLoop256 so different DNNL_ISA build targets
   can do the right thing.
-- unfortunately, the is no "minimum" isa for x86, since DNNL is built to run on
   "any" x86, so we cannot guarantee that we have 512-bit registers :(
   oh well.
-- But other cpus might always be able to provide 16 'int32' in a single vector register
-- And someday, we might be able to compile for a given MINIMUM DNNL_ISA too,
   where a ShortLoop16 hint might actually do something.
src/compute/dispatch.cpp
src/compute/dispatch.hpp
src/io/names.cpp
src/ocl/jit_primitive_conf.hpp
src/ocl/ref_softmax.hpp
src/ocl/ocl_inner_product_pd.hpp
src/ocl/jit_ref_eltwise_common_kernel.hpp
src/common/memory.cpp
src/common/sum.cpp
src/common/concat.cpp
src/common/binary.cpp
src/common/memory_desc_wrapper.cpp
src/common/type_helpers.hpp
src/common/dnnl_debug.cpp
src/common/convolution.cpp
src/common/memory_desc_wrapper.hpp
src/common/pooling.cpp
src/common/deconvolution.cpp
src/cpu/ref_binary.cpp
src/cpu/cpu_memory.hpp
src/cpu/jit_uni_1x1_conv_utils.hpp
src/cpu/simple_concat.hpp
src/cpu/cpu_inner_product_pd.hpp
src/cpu/jit_uni_reorder.cpp
src/cpu/simple_reorder.hpp
src/cpu/jit_uni_reorder_utils.cpp
-------------------------------------------
-------------------------------------------
