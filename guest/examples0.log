>>>> simple-net-c
tee: cannot access simple-net-c.log
 SX aligned_malloc --> malloc(430944)
 SX aligned_malloc --> malloc(150528)
 SX aligned_malloc --> malloc(139392)
 SX aligned_malloc --> malloc(384)

T:create memory 
T:create data descriptors for convolutions, mkldnn_any 
T:create convolution  VERBOSE_PRIMITIVE_CREATE = 1
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 SX aligned_malloc --> malloc(430944)
 SX aligned_malloc --> malloc(139392)
 SX aligned_malloc --> malloc(691200)

T:create mem for dst data (no need to reorder it same as user) 
conv_internal_dst_memory 
mkldnn_primitive_t: C  primitive_kind:memory@404356260,inputs[0],outputs[1] M:
             outputs[0]=@404356260

(after set_data_handle) conv_internal_dst_memory  
mkldnn_primitive_t: C  primitive_kind:memory@404356260,inputs[0],outputs[1] M:
             outputs[0]=@404356260

T:create reorder primitives user data --> conv src 
T:create convolution primitive 
T:AlexNet: relu {BATCH,96,55,55} -> {BATCH,96,55,55}  SX aligned_malloc --> malloc(691200)

T:create relu 
T:mkldnn_relu_forward_desc_init,,, 
T:mkldnn_primitive_desc_create...  create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success

T:mkldnn_primitive_desc_query_pd... 
T:create relu primitive  relu_srcs.output_index = 0


relu_srcs  primitive_at:404356260,output_index=0
...primitive: C  primitive_kind:memory@404356260,inputs[0],outputs[1] M:
             outputs[0]=@404356260

+relu_fwd_t:
            kind()=primitive_kind:relu
            inputs,outputs.size()=1,1
            conf_.n_inputs(),n_outputs()1,1
            input_pd(0)->kind() primitive_kind:memory
           *           ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
            output_pd(0)->kind() primitive_kind:memory
           *            ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}

T:AlexNet: lrn (local response normalization  SX aligned_malloc --> malloc(691200)
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)4, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)5, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)6, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_lrn_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 SX aligned_malloc --> malloc(691200)

T:lrn primitive  SX aligned_malloc --> malloc(150528)

T:pooling descriptor  create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success

T:pooling workspace  SX aligned_malloc --> malloc(150528)

T:reorder primitives user data -> pooling dsts 
T:pooling primitive 
T:connect primitives 
T:create 
T:submit  cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4043557d0,inputs[0],outputs[1] M:
             outputs[0]=@4043557d0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,3,67,67}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404355bf0,inputs[0],outputs[1] M:
             outputs[0]=@404355bf0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:oihw,dims=dims:{96,3,11,11}
 cpu_primitive.hpp input_memory(index=2) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404356010,inputs[0],outputs[1] M:
             outputs[0]=@404356010 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,1,data_type:f32,memory_format:x,dims=dims:{96}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404356260,inputs[0],outputs[1] M:
             outputs[0]=@404356260 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}

ref_relu_fwd_t<>::execut_forward_dense() data_d = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4043564b0,inputs[0],outputs[1] M:
             outputs[0]=@4043564b0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@40462f630,inputs[0],outputs[1] M:
             outputs[0]=@40462f630 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}

T:wait 
T:clean-up 
T:simple_net() DONE passed

     ******  Program Information  ******
  Real Time (sec)               :             0.898613
  User Time (sec)               :             0.890481
  Sys  Time (sec)               :             0.006127
  Vector Time (sec)             :             0.002378
  Inst. Count                   :            882727119.
  V. Inst. Count                :               751516.
  V. Element Count              :            161604980.
  V. Load Element Count         :              4393506.
  FLOP Count                    :            133891787.
  MOPS                          :          1171.929084
  MFLOPS                        :           150.358949
  A. V. Length                  :           215.038642
  V. Op. Ratio (%)              :            15.485625
  Memory Size (MB)              :           192.000000
  MIPS                          :           991.292480
  I-Cache (sec)                 :             0.002118
  O-Cache (sec)                 :             0.004142
  Bank Conflict Time
    CPU Port Conf. (sec)        :             0.000009
    Memory Network Conf. (sec)  :             0.000079
  ADB Hit Element Ratio (%)     :            87.419205

  Start Time (date)    :  Tue Jun 13 19:45:34 GMT 2017
  End   Time (date)    :  Tue Jun 13 19:45:35 GMT 2017
>>>> simple-net-cpp
tee: cannot access simple-net-cpp.log
simple_net() creates a cpu_engine
setting various layer dimension
create memory for user data
create memory descriptors for convolution data w/ no specified format
create a convolution
 VERBOSE_PRIMITIVE_CREATE = 1
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
create reorders between src data and conv input [if req'd]
create conv primitive and add it to net
create relu primitive and add it to net
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success

+relu_fwd_t:
            kind()=primitive_kind:relu
            inputs,outputs.size()=1,1
            conf_.n_inputs(),n_outputs()1,1
            input_pd(0)->kind() primitive_kind:memory
           *           ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
            output_pd(0)->kind() primitive_kind:memory
           *            ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
create lrn primitive and add it to net
retrieve lrn memory descriptor
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)4, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)5, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)6, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_lrn_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
create lrn scratch memory from lrn primitive descriptor
push lrn onto net
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
create pooling primitive an add it to net
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404357aa0,inputs[0],outputs[1] M:
             outputs[0]=@404357aa0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,3,67,67}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404357cf0,inputs[0],outputs[1] M:
             outputs[0]=@404357cf0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:oihw,dims=dims:{96,3,11,11}
 cpu_primitive.hpp input_memory(index=2) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404357f40,inputs[0],outputs[1] M:
             outputs[0]=@404357f40 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,1,data_type:f32,memory_format:x,dims=dims:{96}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404358190,inputs[0],outputs[1] M:
             outputs[0]=@404358190 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}

ref_relu_fwd_t<>::execut_forward_dense() data_d = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4043583e0,inputs[0],outputs[1] M:
             outputs[0]=@4043583e0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404358630,inputs[0],outputs[1] M:
             outputs[0]=@404358630 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{8,96,15,15}
 simple_net.cpp stream(eager).submit(net).wait() DONE (yay)
 
Goodbye

     ******  Program Information  ******
  Real Time (sec)               :             0.910565
  User Time (sec)               :             0.891133
  Sys  Time (sec)               :             0.008548
  Vector Time (sec)             :             0.002394
  Inst. Count                   :            882036013.
  V. Inst. Count                :               751576.
  V. Element Count              :            161609070.
  V. Load Element Count         :              4395551.
  FLOP Count                    :            133891664.
  MOPS                          :          1170.300625
  MFLOPS                        :           150.248800
  A. V. Length                  :           215.026917
  V. Op. Ratio (%)              :            15.496220
  Memory Size (MB)              :           192.000000
  MIPS                          :           989.791662
  I-Cache (sec)                 :             0.003061
  O-Cache (sec)                 :             0.004641
  Bank Conflict Time
    CPU Port Conf. (sec)        :             0.000009
    Memory Network Conf. (sec)  :             0.000095
  ADB Hit Element Ratio (%)     :            74.868429

  Start Time (date)    :  Tue Jun 13 19:45:35 GMT 2017
  End   Time (date)    :  Tue Jun 13 19:45:36 GMT 2017
>>>> simple-training-net-c
tee: cannot access simple-training-net-c.log
 VERBOSE_PRIMITIVE_CREATE = 1
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success

+relu_fwd_t:
            kind()=primitive_kind:relu
            inputs,outputs.size()=1,1
            conf_.n_inputs(),n_outputs()1,1
            input_pd(0)->kind() primitive_kind:memory
           *           ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
            output_pd(0)->kind() primitive_kind:memory
           *            ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)4, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)5, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)6, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_lrn_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)4, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)5, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)6, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_lrn_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::ref_lrn_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success

+relu_fwd_t:
            kind()=primitive_kind:relu
            inputs,outputs.size()=1,1
            conf_.n_inputs(),n_outputs()1,1
            input_pd(0)->kind() primitive_kind:memory
           *           ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
            output_pd(0)->kind() primitive_kind:memory
           *            ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 VERBOSE_PRIMITIVE_CREATE = 1
 mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>::pd_t failed precondition:
	utils::one_of(this->cdesc_().prop_kind, forward_training, forward_inference)
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4044ff8d0,inputs[0],outputs[1] M:
             outputs[0]=@4044ff8d0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,3,67,67}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4044ffcf0,inputs[0],outputs[1] M:
             outputs[0]=@4044ffcf0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:oihw,dims=dims:{96,3,11,11}
 cpu_primitive.hpp input_memory(index=2) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404500110,inputs[0],outputs[1] M:
             outputs[0]=@404500110 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,1,data_type:f32,memory_format:x,dims=dims:{96}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404500360,inputs[0],outputs[1] M:
             outputs[0]=@404500360 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}

ref_relu_fwd_t<>::execut_forward_dense() data_d = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4045005b0,inputs[0],outputs[1] M:
             outputs[0]=@4045005b0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404f04d60,inputs[0],outputs[1] M:
             outputs[0]=@404f04d60 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@40523c570,inputs[0],outputs[1] M:
             outputs[0]=@40523c570 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,7,7}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@40523c320,inputs[0],outputs[1] M:
             outputs[0]=@40523c320 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:s32,memory_format:nchw,dims=dims:{32,96,7,7}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4045005b0,inputs[0],outputs[1] M:
             outputs[0]=@4045005b0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@40523c7c0,inputs[0],outputs[1] M:
             outputs[0]=@40523c7c0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404500360,inputs[0],outputs[1] M:
             outputs[0]=@404500360 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}

ref_relu_fwd_t<>::execut_forward_dense() data_d = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4044ff8d0,inputs[0],outputs[1] M:
             outputs[0]=@4044ff8d0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,3,67,67}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4056082e0,inputs[0],outputs[1] M:
             outputs[0]=@4056082e0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
passed

     ******  Program Information  ******
  Real Time (sec)               :            18.607766
  User Time (sec)               :            18.585364
  Sys  Time (sec)               :             0.010068
  Vector Time (sec)             :             0.018317
  Inst. Count                   :          18368813747.
  V. Inst. Count                :              6650638.
  V. Element Count              :           1293908542.
  V. Load Element Count         :             35004895.
  FLOP Count                    :           1232771803.
  MOPS                          :          1057.610260
  MFLOPS                        :            66.330248
  A. V. Length                  :           194.554048
  V. Op. Ratio (%)              :             6.582742
  Memory Size (MB)              :           192.000000
  MIPS                          :           988.348345
  I-Cache (sec)                 :             0.003613
  O-Cache (sec)                 :             0.036114
  Bank Conflict Time
    CPU Port Conf. (sec)        :             0.000108
    Memory Network Conf. (sec)  :             0.000577
  ADB Hit Element Ratio (%)     :            89.355640

  Start Time (date)    :  Tue Jun 13 19:45:36 GMT 2017
  End   Time (date)    :  Tue Jun 13 19:45:54 GMT 2017
>>>> simple-training-net-cpp
tee: cannot access simple-training-net-cpp.log
 VERBOSE_PRIMITIVE_CREATE = 1
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success

+relu_fwd_t:
            kind()=primitive_kind:relu
            inputs,outputs.size()=1,1
            conf_.n_inputs(),n_outputs()1,1
            input_pd(0)->kind() primitive_kind:memory
           *           ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
            output_pd(0)->kind() primitive_kind:memory
           *            ->desc() memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)4, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)5, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)6, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_lrn_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)4>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)5>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_softmax_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::nchw_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)4, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)5, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_pooling_fwd_t<(mkldnn_data_type_t)6, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_lrn_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::ref_lrn_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1, (mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_data_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_convolution_bwd_weights_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)6, (mkldnn_data_type_t)5, (mkldnn_data_type_t)2, (mkldnn_data_type_t)6>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::_ref_convolution_fwd_t<false, (mkldnn_data_type_t)4, (mkldnn_data_type_t)4, (mkldnn_data_type_t)2, (mkldnn_data_type_t)2>>::pd_t(pd,adesc,engine,hint_fwd) --> status:invalid_arguments
 create<mkldnn::impl::cpu::ref_relu_fwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::ref_relu_bwd_t<(mkldnn_data_type_t)1>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 VERBOSE_PRIMITIVE_CREATE = 1
 mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>::pd_t failed precondition:
	utils::one_of(this->cdesc_().prop_kind, forward_training, forward_inference)
 create<mkldnn::impl::cpu::_gemm_convolution_fwd_t<false, false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_data_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:unimplemented
 create<mkldnn::impl::cpu::_gemm_convolution_bwd_weights_t<false, (mkldnn::impl::cpu::cpu_isa_t)0>>::pd_t(pd,adesc,engine,hint_fwd) --> status:success
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404501ac0,inputs[0],outputs[1] M:
             outputs[0]=@404501ac0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,3,67,67}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404501d10,inputs[0],outputs[1] M:
             outputs[0]=@404501d10 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:oihw,dims=dims:{96,3,11,11}
 cpu_primitive.hpp input_memory(index=2) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404501f60,inputs[0],outputs[1] M:
             outputs[0]=@404501f60 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,1,data_type:f32,memory_format:x,dims=dims:{96}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4045021b0,inputs[0],outputs[1] M:
             outputs[0]=@4045021b0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}

ref_relu_fwd_t<>::execut_forward_dense() data_d = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404502400,inputs[0],outputs[1] M:
             outputs[0]=@404502400 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404503430,inputs[0],outputs[1] M:
             outputs[0]=@404503430 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404a9d220,inputs[0],outputs[1] M:
             outputs[0]=@404a9d220 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,7,7}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404a9cfd0,inputs[0],outputs[1] M:
             outputs[0]=@404a9cfd0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:s32,memory_format:nchw,dims=dims:{32,96,7,7}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404502400,inputs[0],outputs[1] M:
             outputs[0]=@404502400 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404fe4340,inputs[0],outputs[1] M:
             outputs[0]=@404fe4340 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@4045021b0,inputs[0],outputs[1] M:
             outputs[0]=@4045021b0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404fe4590,inputs[0],outputs[1] M:
             outputs[0]=@404fe4590 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
 cpu_primitive.hpp input_memory(index=0) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404501ac0,inputs[0],outputs[1] M:
             outputs[0]=@404501ac0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,3,67,67}
 cpu_primitive.hpp input_memory(index=1) :
    this->inputs()[index] =  A  C  primitive_kind:memory@404fe47e0,inputs[0],outputs[1] M:
             outputs[0]=@404fe47e0 B ,output_index=0
 cpu_memory_t::const_memory(0) :
               conf_.kind() = primitive_kind:memory
              *conf_.desc() = memory_desc:primitive_kind:memory,4,data_type:f32,memory_format:nchw,dims=dims:{32,96,15,15}
passed

     ******  Program Information  ******
  Real Time (sec)               :            18.940667
  User Time (sec)               :            18.912898
  Sys  Time (sec)               :             0.010102
  Vector Time (sec)             :             0.018323
  Inst. Count                   :          18590125719.
  V. Inst. Count                :              6650712.
  V. Element Count              :           1293918768.
  V. Load Element Count         :             35010008.
  FLOP Count                    :           1245408265.
  MOPS                          :          1050.996721
  MFLOPS                        :            65.849679
  A. V. Length                  :           194.553420
  V. Op. Ratio (%)              :             6.509499
  Memory Size (MB)              :           192.000000
  MIPS                          :           982.933748
  I-Cache (sec)                 :             0.004714
  O-Cache (sec)                 :             0.165281
  Bank Conflict Time
    CPU Port Conf. (sec)        :             0.000109
    Memory Network Conf. (sec)  :             0.000568
  ADB Hit Element Ratio (%)     :            89.122493

  Start Time (date)    :  Tue Jun 13 19:45:54 GMT 2017
  End   Time (date)    :  Tue Jun 13 19:46:13 GMT 2017
